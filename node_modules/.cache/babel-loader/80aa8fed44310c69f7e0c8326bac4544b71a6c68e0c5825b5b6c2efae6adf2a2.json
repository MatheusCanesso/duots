{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mc121522\\\\Desktop\\\\Estudos\\\\duots\\\\src\\\\pages\\\\NewProject.jsx\";\n// Importações\nimport ProjectForm from '../project/ProjectForm';\nimport styles from './NewProject.module.css';\nimport { useNavigate } from 'react-router-dom';\n\n// Esse hook vai permitir fazer redirects nas páginas - o usuário será redirecionado\n// handleSubmit={} - Vai depender do método\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navigate = useNavigate();\nfunction createPost(project) {\n  // Passando um projeto pro createPost e inserir um projeto no sistema\n  // initialize cost and services\n  project.cost = 0;\n  project.services = [];\n  fetch(\"http://localhost:5000/projects\", {\n    // Método para fazer envio de form\n    method: \"POST\",\n    headers: {\n      // Comunicação com o json\n      'Content-type': \"application/json\"\n    },\n    body: JSON.stringify(project)\n    // Mandando os dados por POST no local de projetos do json\n  })(\n  // Recebemos uma resposta e transformo ela em json\n  (resp => resp.json()\n  // Esse then() recebe os dados\n  )(data => {\n    console.log(data);\n    // redirect\n    navigate('/projects', {\n      message: 'Projeto criado com sucesso!'\n    });\n  })) // Possivel erro do servidor\n  .catch(err => console.log(err));\n}\nfunction NewProject() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.newproject_container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Criar um novo projeto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Crie um projeto e gerencie seus servi\\xE7os!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {\n      handleSubmit: createPost,\n      btnText: \"Criar projeto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_c = NewProject;\nexport default NewProject;\nvar _c;\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"names":["ProjectForm","styles","useNavigate","jsxDEV","_jsxDEV","navigate","createPost","project","cost","services","fetch","method","headers","body","JSON","stringify","resp","json","data","console","log","message","catch","err","NewProject","className","newproject_container","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","btnText","_c","$RefreshReg$"],"sources":["C:/Users/mc121522/Desktop/Estudos/duots/src/pages/NewProject.jsx"],"sourcesContent":["// Importações\r\nimport ProjectForm from '../project/ProjectForm'\r\nimport styles from './NewProject.module.css'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n    // Esse hook vai permitir fazer redirects nas páginas - o usuário será redirecionado\r\n    // handleSubmit={} - Vai depender do método\r\n    const navigate = useNavigate()\r\n\r\n    function createPost(project) {\r\n        // Passando um projeto pro createPost e inserir um projeto no sistema\r\n        // initialize cost and services\r\n        project.cost = 0\r\n        project.services = []\r\n\r\n        fetch(\"http://localhost:5000/projects\", {\r\n            // Método para fazer envio de form\r\n            method: \"POST\",\r\n            headers: {\r\n                // Comunicação com o json\r\n                'Content-type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(project)\r\n            // Mandando os dados por POST no local de projetos do json\r\n        })\r\n            (\r\n                // Recebemos uma resposta e transformo ela em json\r\n                ((resp) => resp.json())\r\n                    // Esse then() recebe os dados\r\n                    ((data) => {\r\n                        console.log(data)\r\n                        // redirect\r\n                        navigate('/projects', { message: 'Projeto criado com sucesso!' })\r\n                    })\r\n            ) // Possivel erro do servidor\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\nfunction NewProject() {\r\n\r\n    return (\r\n        <div className={styles.newproject_container}>\r\n            <h1>Criar um novo projeto</h1>\r\n            <p>Crie um projeto e gerencie seus serviços!</p>\r\n            <ProjectForm handleSubmit={createPost} btnText=\"Criar projeto\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewProject"],"mappings":";AAAA;AACA,OAAOA,WAAW,MAAM,wBAAwB;AAChD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;;AAE1C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;AAE9B,SAASI,UAAUA,CAACC,OAAO,EAAE;EACzB;EACA;EACAA,OAAO,CAACC,IAAI,GAAG,CAAC;EAChBD,OAAO,CAACE,QAAQ,GAAG,EAAE;EAErBC,KAAK,CAAC,gCAAgC,EAAE;IACpC;IACAC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL;MACA,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;IAC5B;EACJ,CAAC,CAAC;EAEM;EACA,CAAES,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;EACjB;EAAA,EACEC,IAAI,IAAK;IACPC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB;IACAb,QAAQ,CAAC,WAAW,EAAE;MAAEgB,OAAO,EAAE;IAA8B,CAAC,CAAC;EACrE,CAAC,CACT,CAAC,CAAC;EAAA,CACDC,KAAK,CAACC,GAAG,IAAIJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC,CAAC;AACvC;AAEJ,SAASC,UAAUA,CAAA,EAAG;EAElB,oBACIpB,OAAA;IAAKqB,SAAS,EAAExB,MAAM,CAACyB,oBAAqB;IAAAC,QAAA,gBACxCvB,OAAA;MAAAuB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9B3B,OAAA;MAAAuB,QAAA,EAAG;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChD3B,OAAA,CAACJ,WAAW;MAACgC,YAAY,EAAE1B,UAAW;MAAC2B,OAAO,EAAC;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd;AAACG,EAAA,GATQV,UAAU;AAWnB,eAAeA,UAAU;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}