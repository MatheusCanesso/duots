{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mc121522\\\\Desktop\\\\Estudos\\\\duots\\\\src\\\\project\\\\ProjectForm.jsx\",\n  _s = $RefreshSig$();\n// Option - Caixa de seleção\n// disabled - Desabilita a caixa de seleção\n\n// Importações\nimport styles from './ProjectForm.module.css';\nimport Input from '../form/Input';\nimport Select from '../form/Select';\nimport SubmitButton from '../form/SubmitButton';\nimport { useEffect, useState } from 'react';\n\n// projectData - Dados do projeto => envio de projeto pra edição => passa pela página pai\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  // Request de get no endereço do banco de dados\n  // fetch - API do JavaScript\n  fetch(\"http://localhost:5000/categories\", {\n    method: \"GET\",\n    // Método de pegar - GET\n    headers: {\n      // Tipo da comunicação - Recebendo json\n      'Content-Type': 'application/json'\n    }\n  })\n  // Métodos\n  // then() - Processos para fazer com a API\n  .then(resp => resp.json()) // O que receber de dado, vai virar json\n  // Aproveitando o dados  que foram pegos da resposta\n  .then(data => {\n    setCategories(data);\n    // Usando os dados do json e coloquei no hook de setCategories\n  }).catch(err => console.log(err));\n}, []);\nconst submit = e => {\n  e.preventDefault();\n  // console.log(project)\n  handleSubmit(project);\n};\nfunction handleChange(e) {\n  // Pegar todo o dado do project, um state, e.target.name que é o nome do input\n  // Independende do input preenchido \n  setProject({\n    ...project,\n    [e.target.name]: e.target.value\n  });\n}\nfunction handleCategory(e) {\n  // Pegar todo o dado do project, um state, e.target.name que é o nome do input\n  // Independende do input preenchido \n  setProject({\n    ...project,\n    category: {\n      id: e.target.value,\n      // [e.target.selectedIndex] - No evento de Select, acessar qual a opção selecionada pelo usuário\n      name: e.target.options[e.target.selectedIndex].text\n    }\n  });\n}\nfunction ProjectForm({\n  handleSubmit,\n  btnText,\n  projectData\n}) {\n  _s();\n  // Inicializando o valores deles como vazio - array vazio\n  const [categories, setCategories] = useState([]);\n  // Recebo o projectData do componente pai\n  const [project, setProject] = useState(projectData || {});\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      text: \"Nome do projeto\",\n      name: \"name\",\n      placeholder: \"Insira o nome do projeto\",\n      handleOnChange: handleChange,\n      value: project.name ? project.name : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\",\n      text: \"Or\\xE7amento do projeto\",\n      name: \"budget\",\n      placeholder: \"Insira o or\\xE7amento do projeto\",\n      handleOnChange: handleChange,\n      value: project.budget ? project.budget : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      name: \"category_id\",\n      text: \"Selecione a categoria\",\n      options: categories,\n      handleOnChange: handleCategory,\n      value: project.category ? project.category.id : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      text: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectForm, \"8NUeVT/Lc8GgVodgHFgI2HGxAIE=\");\n_c = ProjectForm;\nexport default ProjectForm;\nvar _c;\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"names":["styles","Input","Select","SubmitButton","useEffect","useState","jsxDEV","_jsxDEV","fetch","method","headers","then","resp","json","data","setCategories","catch","err","console","log","submit","e","preventDefault","handleSubmit","project","handleChange","setProject","target","name","value","handleCategory","category","id","options","selectedIndex","text","ProjectForm","btnText","projectData","_s","categories","onSubmit","className","form","children","type","placeholder","handleOnChange","fileName","_jsxFileName","lineNumber","columnNumber","budget","_c","$RefreshReg$"],"sources":["C:/Users/mc121522/Desktop/Estudos/duots/src/project/ProjectForm.jsx"],"sourcesContent":["// Option - Caixa de seleção\r\n// disabled - Desabilita a caixa de seleção\r\n\r\n// Importações\r\nimport styles from './ProjectForm.module.css'\r\nimport Input from '../form/Input'\r\nimport Select from '../form/Select'\r\nimport SubmitButton from '../form/SubmitButton'\r\nimport { useEffect, useState } from 'react'\r\n\r\n// projectData - Dados do projeto => envio de projeto pra edição => passa pela página pai\r\n\r\nuseEffect(() => {\r\n    // Request de get no endereço do banco de dados\r\n    // fetch - API do JavaScript\r\n    fetch(\"http://localhost:5000/categories\", {\r\n        method: \"GET\", // Método de pegar - GET\r\n        headers: {\r\n            // Tipo da comunicação - Recebendo json\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        // Métodos\r\n        // then() - Processos para fazer com a API\r\n        .then((resp) => resp.json()) // O que receber de dado, vai virar json\r\n        // Aproveitando o dados  que foram pegos da resposta\r\n        .then((data) => {\r\n            setCategories(data)\r\n            // Usando os dados do json e coloquei no hook de setCategories\r\n        })\r\n        .catch(err => console.log(err))\r\n}, [])\r\n\r\nconst submit = (e) => {\r\n    e.preventDefault()\r\n    // console.log(project)\r\n    handleSubmit(project)\r\n}\r\n\r\nfunction handleChange(e) {\r\n    // Pegar todo o dado do project, um state, e.target.name que é o nome do input\r\n    // Independende do input preenchido \r\n    setProject({ ...project, [e.target.name]: e.target.value})\r\n}\r\n\r\nfunction handleCategory(e) {\r\n    // Pegar todo o dado do project, um state, e.target.name que é o nome do input\r\n    // Independende do input preenchido \r\n    setProject({ ...project, category: {\r\n        id: e.target.value,\r\n        // [e.target.selectedIndex] - No evento de Select, acessar qual a opção selecionada pelo usuário\r\n        name:e.target.options[e.target.selectedIndex].text,\r\n    }})\r\n\r\n}\r\n\r\nfunction ProjectForm({ handleSubmit, btnText, projectData  }) {\r\n    // Inicializando o valores deles como vazio - array vazio\r\n    const [categories, setCategories] = useState([])\r\n    // Recebo o projectData do componente pai\r\n    const [project, setProject] = useState(projectData || {})\r\n\r\n    return (\r\n        <form onSubmit={submit} className={styles.form}>\r\n            <Input\r\n                type=\"text\"\r\n                text=\"Nome do projeto\"\r\n                name=\"name\"\r\n                placeholder=\"Insira o nome do projeto\"\r\n                handleOnChange={handleChange}\r\n                value={project.name ? project.name : ''}\r\n            />\r\n            <Input\r\n                type=\"number\"\r\n                text=\"Orçamento do projeto\"\r\n                name=\"budget\"\r\n                placeholder=\"Insira o orçamento do projeto\"\r\n                handleOnChange={handleChange}\r\n                value={project.budget ? project.budget : ''}\r\n            />\r\n            <Select\r\n                name=\"category_id\"\r\n                text=\"Selecione a categoria\"\r\n                options={categories}\r\n                handleOnChange={handleCategory}\r\n                value={project.category ? project.category.id : ''}\r\n            />\r\n\r\n            <SubmitButton text={btnText} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProjectForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}