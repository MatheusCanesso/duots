{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mc121522\\\\Desktop\\\\Estudos\\\\duots\\\\src\\\\pages\\\\NewProject.jsx\",\n  _s = $RefreshSig$();\n// Importações\nimport ProjectForm from '../project/ProjectForm';\nimport styles from './NewProject.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { postData } from '../helpers/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewProject() {\n  _s();\n  // Esse hook vai permitir fazer redirects nas páginas - o usuário será redirecionado\n  // handleSubmit={} - Vai depender do método\n  const navigate = useNavigate();\n  function createPost(project) {\n    // Passando um projeto pro createPost e inserir um projeto no sistema\n    // initialize cost and services\n    project.cost = 0;\n    project.services = [];\n    postData(\"/projects\", project).then(data => {\n      const state = {\n        message: \"Projeto criado com sucesso!\"\n      };\n      navigate(\"/projects\", {\n        state\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.newproject_container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Criar um novo projeto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Crie um projeto e gerencie seus servi\\xE7os!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {\n      handleSubmit: createPost,\n      btnText: \"Criar projeto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(NewProject, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = NewProject;\nexport default NewProject;\nvar _c;\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"names":["ProjectForm","styles","useNavigate","useHistory","postData","jsxDEV","_jsxDEV","NewProject","_s","navigate","createPost","project","cost","services","then","data","state","message","className","newproject_container","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","btnText","_c","$RefreshReg$"],"sources":["C:/Users/mc121522/Desktop/Estudos/duots/src/pages/NewProject.jsx"],"sourcesContent":["// Importações\r\nimport ProjectForm from '../project/ProjectForm'\r\nimport styles from './NewProject.module.css'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { postData } from '../helpers/request'\r\n\r\nfunction NewProject() {\r\n\r\n    // Esse hook vai permitir fazer redirects nas páginas - o usuário será redirecionado\r\n    // handleSubmit={} - Vai depender do método\r\n    const navigate = useNavigate()\r\n\r\n    function createPost(project) {\r\n        // Passando um projeto pro createPost e inserir um projeto no sistema\r\n        // initialize cost and services\r\n        project.cost = 0\r\n        project.services = []\r\n\r\n\r\n        postData(\"/projects\", project).then((data) => {\r\n            const state = { message: \"Projeto criado com sucesso!\" };\r\n            navigate(\"/projects\", { state });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={styles.newproject_container}>\r\n            <h1>Criar um novo projeto</h1>\r\n            <p>Crie um projeto e gerencie seus serviços!</p>\r\n            <ProjectForm handleSubmit={createPost} btnText=\"Criar projeto\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewProject"],"mappings":";;AAAA;AACA,OAAOA,WAAW,MAAM,wBAAwB;AAChD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,QAAQ,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB;EACA;EACA,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,SAASQ,UAAUA,CAACC,OAAO,EAAE;IACzB;IACA;IACAA,OAAO,CAACC,IAAI,GAAG,CAAC;IAChBD,OAAO,CAACE,QAAQ,GAAG,EAAE;IAGrBT,QAAQ,CAAC,WAAW,EAAEO,OAAO,CAAC,CAACG,IAAI,CAAEC,IAAI,IAAK;MAC1C,MAAMC,KAAK,GAAG;QAAEC,OAAO,EAAE;MAA8B,CAAC;MACxDR,QAAQ,CAAC,WAAW,EAAE;QAAEO;MAAM,CAAC,CAAC;IACpC,CAAC,CAAC;EACN;EAEA,oBACIV,OAAA;IAAKY,SAAS,EAAEjB,MAAM,CAACkB,oBAAqB;IAAAC,QAAA,gBACxCd,OAAA;MAAAc,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BlB,OAAA;MAAAc,QAAA,EAAG;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChDlB,OAAA,CAACN,WAAW;MAACyB,YAAY,EAAEf,UAAW;MAACgB,OAAO,EAAC;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd;AAAChB,EAAA,CA1BQD,UAAU;EAAA,QAIEL,WAAW;AAAA;AAAAyB,EAAA,GAJvBpB,UAAU;AA4BnB,eAAeA,UAAU;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}