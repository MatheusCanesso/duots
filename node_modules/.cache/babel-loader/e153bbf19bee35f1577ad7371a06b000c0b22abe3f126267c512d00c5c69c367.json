{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mc121522\\\\Desktop\\\\Estudos\\\\duots\\\\src\\\\project\\\\ProjectForm.jsx\",\n  _s = $RefreshSig$();\n// Option - Caixa de seleção\n// disabled - Desabilita a caixa de seleção\n\n// Importações\nimport styles from './ProjectForm.module.css';\nimport Input from '../form/Input';\nimport Select from '../form/Select';\nimport SubmitButton from '../form/SubmitButton';\nimport { useEffect, useState } from 'react';\n\n// projectData - Dados do projeto => envio de projeto pra edição => passa pela página pai\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectForm({\n  handleSubmit,\n  btnText,\n  projectData\n}) {\n  _s();\n  // Inicializando o valores deles como vazio - array vazio\n  const [categories, setCategories] = useState([]);\n  // Recebo o projectData do componente pai\n  const [project, setProject] = useState(projectData || {});\n  useEffect(() => {\n    // Request de get no endereço do banco de dados\n    // fetch - API do JavaScript\n    fetch(\"http://localhost:5000/categories\", {\n      method: \"GET\",\n      // Método de pegar - GET\n      headers: {\n        // Tipo da comunicação - Recebendo json\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()) // O que receber de dado, vai virar json\n    // Métodos\n    // then() - Processos para fazer com a API\n    // Aproveitando o dados  que foram pegos da resposta\n    .then(data => {\n      setCategories(data);\n      // Usando os dados do json e coloquei no hook de setCategories\n    }).catch(err => console.log(err));\n  }, []);\n  const submit = e => {\n    e.preventDefault();\n    // console.log(project)\n    handleSubmit(project);\n  };\n  function handleChange(e) {\n    // Pegar todo o dado do project, um state, e.target.name que é o nome do input\n    // Independende do input preenchido \n    setProject({\n      ...project,\n      [e.target.name]: e.target.value\n    });\n  }\n  function handleCategory(e) {\n    // Pegar todo o dado do project, um state, e.target.name que é o nome do input\n    // Independende do input preenchido \n    setProject({\n      ...project,\n      category: {\n        id: e.target.value,\n        // [e.target.selectedIndex] - No evento de Select, acessar qual a opção selecionada pelo usuário\n        name: e.target.options[e.target.selectedIndex].text\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      text: \"Nome do projeto\",\n      name: \"name\",\n      placeholder: \"Insira o nome do projeto\",\n      handleOnChange: handleChange,\n      value: project.name ? project.name : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\",\n      text: \"Or\\xE7amento do projeto\",\n      name: \"budget\",\n      placeholder: \"Insira o or\\xE7amento do projeto\",\n      handleOnChange: handleChange,\n      value: project.budget ? project.budget : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      name: \"category_id\",\n      text: \"Selecione a categoria\",\n      options: categories,\n      handleOnChange: handleCategory,\n      value: project.category ? project.category.id : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      text: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectForm, \"HqwHAWR72GT/iPVMwQAus0G0i+Y=\");\n_c = ProjectForm;\nexport default ProjectForm;\nvar _c;\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"names":["styles","Input","Select","SubmitButton","useEffect","useState","jsxDEV","_jsxDEV","ProjectForm","handleSubmit","btnText","projectData","_s","categories","setCategories","project","setProject","fetch","method","headers","then","resp","json","data","catch","err","console","log","submit","e","preventDefault","handleChange","target","name","value","handleCategory","category","id","options","selectedIndex","text","onSubmit","className","form","children","type","placeholder","handleOnChange","fileName","_jsxFileName","lineNumber","columnNumber","budget","_c","$RefreshReg$"],"sources":["C:/Users/mc121522/Desktop/Estudos/duots/src/project/ProjectForm.jsx"],"sourcesContent":["// Option - Caixa de seleção\r\n// disabled - Desabilita a caixa de seleção\r\n\r\n// Importações\r\nimport styles from './ProjectForm.module.css'\r\nimport Input from '../form/Input'\r\nimport Select from '../form/Select'\r\nimport SubmitButton from '../form/SubmitButton'\r\nimport { useEffect, useState } from 'react'\r\n\r\n// projectData - Dados do projeto => envio de projeto pra edição => passa pela página pai\r\n\r\nfunction ProjectForm({ handleSubmit, btnText, projectData  }) {\r\n    // Inicializando o valores deles como vazio - array vazio\r\n    const [categories, setCategories] = useState([])\r\n    // Recebo o projectData do componente pai\r\n    const [project, setProject] = useState(projectData || {})\r\n\r\n    useEffect(() => {\r\n        // Request de get no endereço do banco de dados\r\n        // fetch - API do JavaScript\r\n        fetch(\"http://localhost:5000/categories\", {\r\n            method: \"GET\", // Método de pegar - GET\r\n            headers: {\r\n                // Tipo da comunicação - Recebendo json\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then((resp) => resp.json()) // O que receber de dado, vai virar json\r\n        // Métodos\r\n        // then() - Processos para fazer com a API\r\n        // Aproveitando o dados  que foram pegos da resposta\r\n        .then((data) => {\r\n            setCategories(data)\r\n                // Usando os dados do json e coloquei no hook de setCategories\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        // console.log(project)\r\n        handleSubmit(project)\r\n    }\r\n\r\n    function handleChange(e) {\r\n        // Pegar todo o dado do project, um state, e.target.name que é o nome do input\r\n        // Independende do input preenchido \r\n        setProject({ ...project, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    function handleCategory(e) {\r\n        // Pegar todo o dado do project, um state, e.target.name que é o nome do input\r\n        // Independende do input preenchido \r\n        setProject({ ...project, category: {\r\n            id: e.target.value,\r\n            // [e.target.selectedIndex] - No evento de Select, acessar qual a opção selecionada pelo usuário\r\n            name:e.target.options[e.target.selectedIndex].text,\r\n        }})\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit} className={styles.form}>\r\n            <Input\r\n                type=\"text\"\r\n                text=\"Nome do projeto\"\r\n                name=\"name\"\r\n                placeholder=\"Insira o nome do projeto\"\r\n                handleOnChange={handleChange}\r\n                value={project.name ? project.name : ''}\r\n            />\r\n            <Input\r\n                type=\"number\"\r\n                text=\"Orçamento do projeto\"\r\n                name=\"budget\"\r\n                placeholder=\"Insira o orçamento do projeto\"\r\n                handleOnChange={handleChange}\r\n                value={project.budget ? project.budget : ''}\r\n            />\r\n            <Select\r\n                name=\"category_id\"\r\n                text=\"Selecione a categoria\"\r\n                options={categories}\r\n                handleOnChange={handleCategory}\r\n                value={project.category ? project.category.id : ''}\r\n            />\r\n\r\n            <SubmitButton text={btnText} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProjectForm"],"mappings":";;AAAA;AACA;;AAEA;AACA,OAAOA,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,WAAWA,CAAC;EAAEC,YAAY;EAAEC,OAAO;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC1D;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAACM,WAAW,IAAI,CAAC,CAAC,CAAC;EAEzDP,SAAS,CAAC,MAAM;IACZ;IACA;IACAa,KAAK,CAAC,kCAAkC,EAAE;MACtCC,MAAM,EAAE,KAAK;MAAE;MACfC,OAAO,EAAE;QACL;QACA,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACDC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B;IACA;IACA;IAAA,CACCF,IAAI,CAAEG,IAAI,IAAK;MACZT,aAAa,CAACS,IAAI,CAAC;MACf;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,MAAM,GAAIC,CAAC,IAAK;IAClBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACArB,YAAY,CAACM,OAAO,CAAC;EACzB,CAAC;EAED,SAASgB,YAAYA,CAACF,CAAC,EAAE;IACrB;IACA;IACAb,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAE,CAACc,CAAC,CAACG,MAAM,CAACC,IAAI,GAAGJ,CAAC,CAACG,MAAM,CAACE;IAAK,CAAC,CAAC;EAC9D;EAEA,SAASC,cAAcA,CAACN,CAAC,EAAE;IACvB;IACA;IACAb,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAEqB,QAAQ,EAAE;QAC/BC,EAAE,EAAER,CAAC,CAACG,MAAM,CAACE,KAAK;QAClB;QACAD,IAAI,EAACJ,CAAC,CAACG,MAAM,CAACM,OAAO,CAACT,CAAC,CAACG,MAAM,CAACO,aAAa,CAAC,CAACC;MAClD;IAAC,CAAC,CAAC;EAEP;EAEA,oBACIjC,OAAA;IAAMkC,QAAQ,EAAEb,MAAO;IAACc,SAAS,EAAE1C,MAAM,CAAC2C,IAAK;IAAAC,QAAA,gBAC3CrC,OAAA,CAACN,KAAK;MACF4C,IAAI,EAAC,MAAM;MACXL,IAAI,EAAC,iBAAiB;MACtBP,IAAI,EAAC,MAAM;MACXa,WAAW,EAAC,0BAA0B;MACtCC,cAAc,EAAEhB,YAAa;MAC7BG,KAAK,EAAEnB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,GAAG;IAAG;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACF5C,OAAA,CAACN,KAAK;MACF4C,IAAI,EAAC,QAAQ;MACbL,IAAI,EAAC,yBAAsB;MAC3BP,IAAI,EAAC,QAAQ;MACba,WAAW,EAAC,kCAA+B;MAC3CC,cAAc,EAAEhB,YAAa;MAC7BG,KAAK,EAAEnB,OAAO,CAACqC,MAAM,GAAGrC,OAAO,CAACqC,MAAM,GAAG;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACF5C,OAAA,CAACL,MAAM;MACH+B,IAAI,EAAC,aAAa;MAClBO,IAAI,EAAC,uBAAuB;MAC5BF,OAAO,EAAEzB,UAAW;MACpBkC,cAAc,EAAEZ,cAAe;MAC/BD,KAAK,EAAEnB,OAAO,CAACqB,QAAQ,GAAGrB,OAAO,CAACqB,QAAQ,CAACC,EAAE,GAAG;IAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eAEF5C,OAAA,CAACJ,YAAY;MAACqC,IAAI,EAAE9B;IAAQ;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEf;AAACvC,EAAA,CA/EQJ,WAAW;AAAA6C,EAAA,GAAX7C,WAAW;AAiFpB,eAAeA,WAAW;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}